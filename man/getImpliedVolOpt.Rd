% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/options.R
\name{getImpliedVolOpt}
\alias{getImpliedVolOpt}
\title{getImpliedVolOpt}
\usage{
getImpliedVolOpt(
  type,
  S,
  K,
  r = as.numeric(config::get("interest_rate")),
  DTE,
  div = 0,
  price
)
}
\arguments{
\item{type}{a string, if equal to "Put" then getBSPutPrice is called, if equal to "Call" getBSCallPrice is called, if equal to "Stock" returns 1, else returns NA}

\item{S}{Spot price or current underlying price}

\item{K}{Strike price}

\item{r}{Interest rate - default value is defined in config.yml file}

\item{DTE}{Number of days to expiration (may be a decimal number - useful as expiration may happen at 4:00pm or in the morning (index case))}

\item{div}{annualized dividend yield (i.e. sum of present values of upcoming dividends over 1 year divided by current spot price). Default value is 0.}

\item{price}{option price}
}
\description{
This function computes the implied volatility of a give price, based upon Black-Scholes-Merton model
}
\details{
It performs the computation using dichotomia algorithm. As such this requires that the price function is monotonous. Otherwise a brute force algorithm must be used.

This function cannot be vectorized.
}
\examples{
getImpliedVolOpt(type="Call",S=100,K=100,r=0.04,DTE=5,price=0.85)
getImpliedVolOpt(type="Put",S=22,K=22.5,r=0.04,DTE=5,price=1.1)
}
\keyword{Black-Scholes}
\keyword{trading}
\keyword{volatility}
