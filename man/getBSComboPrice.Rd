% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/options.R
\name{getBSComboPrice}
\alias{getBSComboPrice}
\title{getBSComboPrice}
\usage{
getBSComboPrice(
  data,
  S,
  r = as.numeric(config::get("interest_rate")),
  sig,
  div = 0
)
}
\arguments{
\item{data}{a data frame containing the mandatory following fields: pos,type,strike,DTE,mul + sig}

\item{S}{Spot price or current underlying price - mandatory parameter}

\item{r}{Interest rate - default value is defined in config.yml file}

\item{sig}{annualized volatility - optional parameter, may also be contained within \code{data} parameter}

\item{div}{annualized dividend yield (i.e. sum of present values of upcoming dividends over 1 year divided by current spot price). Default value is 0.}
}
\description{
This function supplies a combo price, i.e. the sum of all contract prices multiplied by their ratioed
positions within the combo (leg price). This sum is then divided by PGCD of all leg prices.
}
\details{
This ratioed price is obtained in 2 steps:
1/ compute each leg's price by using \code{getBSPrice} function, i.e. multiplying their respective price by multiplier- and then multiplying the result of \code{getBSPrice} by position.
2/ dividing each leg price by the PGCD of the total
The contract price of each leg is based upon Black-Scholes-Merton model or a stock price.
Multiplier has to be provided for each leg, in case there is a stock into the combo, the multiplier will make sure
each leg has the correct weight into the combo price.

Regarding implied volatility (\code{sig} parameter) it may be included in the \code{data} parameter - internal IV
or supplied as individual parameter - external IV. In the latter case, the same IV will be applied to each leg,
provided it is an option of course.

This function can be vectorized over \code{S} parameter, e.g. for providing a graph over multiple value of S.
Notice that it in this case the set of \code{S} parameters must be \emph{sorted}, because these parameters will be used by \code{getBSComboPrice}
for grouping data, before executing \code{summarize} function.

Last, through getBSPrice, it handles also special cases not handled correctly by bsput/bscall, such as:
\itemize{
\item DTE=0 and S=K -> option price = 0
\item DTE < 0 -> option price = 0
\item S=K=0 -> option price = 0
}
}
\examples{
getBSComboPrice(data=cbind(data.frame(pos=c(-2,2),type=c("Put","Put"),
strike=c(100,95),DTE=c(5,10)),sig=0.3,r=0.05035,mul=100),S=100)
getBSComboPrice(data=cbind(data.frame(pos=c(200,2),type=c("Stock","Put"),
strike=c(NA,127),DTE=c(NA,18),sig=c(0,0.37),mul=c(1,100)),r=0.05,div=0),S=130)
}
\keyword{Black-Scholes}
\keyword{trading}
